name: Release Task

on:
  push:
    tags:
      # The regex support here is limited, so just match everything that starts with llvmorg- and filter later.
      - 'llvmorg-*'

jobs:
  release-tasks:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Validate Tag
      id: validate-tag
      run: |
        test "${{ github.actor }}" = "tstellar"
        echo "${{ github.ref }}" | grep -e 'llvmorg-[0-9.]\+\(-rc[0-9]\+\)\?'$
        release_version=`echo "${{ github.ref }}" | sed 's/refs\/tags\/llvmorg-//g'`
        echo "::set-output name=release-version::$release_version"

    - name: Install Dependencies
      run: |
        sudo apt-get install doxygen python3-sphinx python3-recommonmark ninja-build graphviz texlive-font-utils python3-github python3-sphinx-markdown-tables
        pip install --user sphinx-markdown-tables

    - name: Checkout LLVM
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
      
    - name: Create Release
      env:
        RELEASE_VERSION: "${{ steps.validate-tag.outputs.release-version }}"
      run: |
         echo "./llvm/utils/release/./github-upload-release.py --token ${{ github.token }} --release ${{ steps.validate-tag.outputs.release-version }} create"
      
    - name: Build Documentation
      run: |
        bash llvm/utils/release/build-docs.sh -srcdir llvm
        echo "./llvm/utils/release/./github-upload-release.py --token ${{ github.token }} --release ${{ steps.validate-tag.outputs.release-version }} upload --files *doxygen*.tar.xz"
        ls *doxygen*.tar.xz

